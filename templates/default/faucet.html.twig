{% extends 'base.html.twig' %}

{% block stylesheets %}
    <style>
        .ads {
            width: 1px;
        }
    </style>

{% endblock %}

{% block background %}
    {% if background_allow %}
    <canvas class="m-0 p-0absolute top-0 fixed w-full h-full" style="" id="background"
            xmlns="http://www.w3.org/1999/html"></canvas>
    {% endif %}

{% endblock %}



{% block body %}
    {% for message in app.flashes('error') %}
        <div class="alert-banner w-full fixed top-0">
            <input type="checkbox" class="hidden" id="banneralert">

            <label class="close cursor-pointer flex items-center justify-between w-full p-2 bg-red-500 shadow text-white" title="close" for="banneralert">
                {{ message }}

                <svg class="fill-current text-white" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
                    <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z"></path>
                </svg>
            </label>
        </div>
    {% endfor %}
    {% for message in app.flashes('success') %}
        <div class="alert-banner w-full fixed top-0">
            <input type="checkbox" class="hidden" id="banneralert">

            <label class="close cursor-pointer flex items-center justify-between w-full p-2 bg-green-500 shadow text-white" title="close" for="banneralert">
                {{ message }}

                <svg class="fill-current text-white" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
                    <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z"></path>
                </svg>
            </label>
        </div>
    {% endfor %}
    <div id="valid">
        <div class="h-24 ads"></div>
    </div>

    <div class="relative xxl:w-2/5 xl:w-1/2 lg:w-3/5 w-4/5 container m-auto">
        <div class="grid grid-cols-2 gap-4">
            {% if ad_top %}
                <div class="pt-2 pb-2 w-full bg-white rounded col-span-2 shadow-lg flex overflow-hidden">
                    <div class="m-auto">
                        {% include 'ads/ad_top.html.twig' %}
                    </div>
                </div>
            {% endif %}

            <div class="rounded shadow-lg border text-center bg-green-100">
                <p>Balance:</br><strong>{{balance()|round(8, 'common') }} {{ ticker }}</strong></p>
            </div>
            <div class=" rounded shadow-lg border text-center bg-blue-100">
                <p>Already paid:</br> <strong>{{ sum()|round(8, 'common')|round(8, 'common') }} {{ ticker }}</strong></p>
            </div>

            <div class="mt-10 col-span-2 rounded border shadow-lg bg-gray-200">
                <p class="m-4">
                    Already paid: <strong>{{ sum()|round(8) }} {{ ticker }}</strong>  with <strong>{{ count() }} payouts</strong></br></br>

                    Payments in queue: <strong>{{ stagedPayouts() }}</strong> </br>
                    {% if mode == "staged" %}
                        <strong>{{ staged_payouts - stagedPayouts() }} Payment(s)</strong> left until the next payout.</br>
                        Payments will be done after <strong>{{ staged_payouts }} staged payments</strong>.</br>
                    {% else %}
                        Payments are made every <strong>{{ payout_time * (1/60) * (1/60) }} hours</strong> </br>
                        You can get free <strong>{{ coinname }}</strong> every <strong>{{ claim_difference * (1/60) * (1/60)}} hours </strong>.</br>


                    {% endif %}
                    {% if custom_text is not empty %}
                        {{ custom_text|raw }}
                    {% endif %}
                </p>
            </div>

            {% if ad_center %}
                <div class="mt-10 pt-2 pb-2 w-full bg-white rounded col-span-2 shadow-lg flex overflow-hidden">
                    <div class="m-auto">
                        {% include 'ads/ad_center.html.twig' %}
                    </div>
                </div>
            {% endif %}

                <div id="claimform" class="mt-10 col-span-2 rounded shadow-lg bg-gradient-to-r from-green-400 to-blue-500">


                    {{ form_start(form) }}
                    {{form_widget(form)}}
                    <div class="m-4 h-captcha" data-sitekey="8328d1d3-b2d5-461e-be26-4cce20b2ba46"></div>
                    {{ form_end(form) }}
                </div>

            {% if adblock_blocker %}
                <div id="disableAdblock" style="visibility: hidden;" class="mt-10 col-span-2 rounded shadow-lg bg-gradient-to-r from-green-400 to-blue-500 relative">
                    <p class="m-4">Please disable your Adblocker</p>
                </div>
            {% endif %}




        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script src="https://hcaptcha.com/1/api.js" async defer></script>

    {% if background_allow %}
    <script src="https://unpkg.com/thpace"></script>
    {% endif %}
    <script>
        const canvas = document.querySelector('#background');

        const settings = {
            colors: ['#4CB1EF',  '#424959',  '#FF4B44'],
            triangleSize: 100
        };

        Thpace.create(canvas, settings);
    </script>
    {% if adblock_blocker %}
        <script type="text/javascript">
            function httpGetAsync()
            {
                var xmlHttp = new XMLHttpRequest();
                var first = true;
                xmlHttp.onreadystatechange = function() {
                    if (xmlHttp.readyState === 4 && xmlHttp.status !== 200){
                        document.getElementById("disableAdblock").style.visibility = "visible";
                        document.getElementById("claimform").style.visibility = "hidden";
                        document.getElementById("claimform").style.display = "none";
                    }

                }
                xmlHttp.open("GET", "{{ asset('build/adblocker.js') }}", true); // true for asynchronous
                xmlHttp.send(null);
            }
            window.onload = httpGetAsync;


        </script>
    {% endif %}

{% endblock %}
