# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration

###> symfony/framework-bundle ###
APP_ENV=dev
APP_SECRET=2a9a0303911def6b643bb92b518139fd
###< symfony/framework-bundle ###

###> symfony/mailer ###
# MAILER_DSN=smtp://localhost
###< symfony/mailer ###

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
# DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
# DATABASE_URL="mysql://db_user:db_password@127.0.0.1:3306/db_name?serverVersion=5.7"
DATABASE_URL="mysql://root@127.0.0.1:3306/faucet"
###< doctrine/doctrine-bundle ###

### Custom Faucet Settings ###
RECAPTCHA_SITE_KEY=0xb942F69336E067FCcfEEa949A267931449a55149
CAPTCHA_SECRET=0xb942F69336E067FCcfEEa949A267931449a55149

CLAIM_DIFFERENCE=200 ### Time to the next Claim in seconds ###

### Set Amount which can be claimed at each claim, if CLAIM_MIN equals CLAIM_MAX the amount will be the same at every claim
### otherwise a random amount between both values will be generated
CLAIM_MIN=1
CLAIM_MAX=2

### Wallet
COINNAME=Jumpcoin
TICKER=Jump
RPCUSER=faucet
RPCPASSWORD=faucetpay
RPCHOST=127.0.0.1
RPCPORT=9998
SINGLE_PAYOUT=false ### yes => make a single tx for every payout, no => Make one tx for the payouts


PAYOUT_MODE=timed ## Payout mode, available: (staged => pay out when STAGED_PAYOUTS payments are in the queue, timed => pay out each x seconds)
STAGED_PAYOUTS=5 ##Amount of payments to be paid out
PAYOUT_TIME=3600 ###Seconds between each payments, please set the cronjob according to this (reference in Readme)